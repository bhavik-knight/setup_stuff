
# manage multiple version of python in user environment
reference: https://realpython.com/intro-to-pyenv/

# pyenv is one way of doing it (pipenv, conda-env, venv, etc. are others)

1. build dependencies
--------------------------------------------------------------------------------
sudo apt-get install -y make build-essential libssl-dev zlib1g-dev \
libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev \
libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl
--------------------------------------------------------------------------------

2. use pyenv-installer script
--------------------------------------------------------------------------------
curl https://pyenv.run | bash
--------------------------------------------------------------------------------


3. add this lines to bash_aliases
--------------------------------------------------------------------------------
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
--------------------------------------------------------------------------------

4. install the python version you like (for example 3.10) - it didn't work
--------------------------------------------------------------------------------
pyenv install -v 3.10
--------------------------------------------------------------------------------

5. check all the python versions
--------------------------------------------------------------------------------
pyenv which python
--------------------------------------------------------------------------------

6. switch global python version, and test it
--------------------------------------------------------------------------------
pyenv global 3.10
pyenv --version
python  -m test
--------------------------------------------------------------------------------

7. remove a specific version (e.g. 3.9)
--------------------------------------------------------------------------------
pyenv uninstall 3.9
pyenv --version
--------------------------------------------------------------------------------

8. explore pyenv commands
--------------------------------------------------------------------------------
pyenv commands
--------------------------------------------------------------------------------

9. creat virtual environment
--------------------------------------------------------------------------------
pyenv vitrualenv 3.10 web-dev
--------------------------------------------------------------------------------
